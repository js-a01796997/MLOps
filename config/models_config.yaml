# MLflow Training Pipeline Configuration
# Define models and their hyperparameter grids for training

# MLflow settings
mlflow:
  experiment_name: "bike_sharing_demand"
  tracking_uri: "https://mlflow.labs.jsdevart.com/"  # Remote MLflow tracking server

# Data paths
data:
  train: "data/processed/train.csv"
  valid: "data/processed/valid.csv"
  test: "data/processed/test.csv"
  target_column: "cnt"

# Models to train
models:
  linear_regression:
    enabled: true
    class: "LinearRegression"
    module: "sklearn.linear_model"
    search_method: "grid"  # "grid" or "random"
    param_grid:
      fit_intercept: [true, false]
      copy_X: [true]
    cv_folds: 5

  ridge_regression:
    enabled: true
    class: "Ridge"
    module: "sklearn.linear_model"
    search_method: "random"  # Use RandomizedSearchCV
    n_iter: 20  # Number of random combinations to try
    param_grid:
      alpha: [0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0]
      fit_intercept: [true, false]
      max_iter: [1000, 5000, 10000]
    cv_folds: 5

  lasso_regression:
    enabled: true
    class: "Lasso"
    module: "sklearn.linear_model"
    search_method: "random"
    n_iter: 20
    param_grid:
      alpha: [0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0]
      fit_intercept: [true, false]
      max_iter: [1000, 5000, 10000]
    cv_folds: 5

  elasticnet:
    enabled: true
    class: "ElasticNet"
    module: "sklearn.linear_model"
    search_method: "random"
    n_iter: 30
    param_grid:
      alpha: [0.001, 0.01, 0.1, 1.0, 10.0]
      l1_ratio: [0.1, 0.3, 0.5, 0.7, 0.9]
      fit_intercept: [true, false]
      max_iter: [1000, 5000]
    cv_folds: 5

  random_forest:
    enabled: false  # Enable if you want to try ensemble methods
    class: "RandomForestRegressor"
    module: "sklearn.ensemble"
    param_grid:
      n_estimators: [50, 100, 200]
      max_depth: [10, 20, 30, null]
      min_samples_split: [2, 5, 10]
      min_samples_leaf: [1, 2, 4]
    cv_folds: 3  # Fewer folds for expensive models

  gradient_boosting:
    enabled: false
    class: "GradientBoostingRegressor"
    module: "sklearn.ensemble"
    param_grid:
      n_estimators: [100, 200]
      learning_rate: [0.01, 0.1, 0.2]
      max_depth: [3, 5, 7]
      subsample: [0.8, 1.0]
    cv_folds: 3

# Evaluation metrics
metrics:
  - "rmse"  # Root Mean Squared Error
  - "mae"   # Mean Absolute Error
  - "r2"    # R-squared
  - "mape"  # Mean Absolute Percentage Error

# Model registry settings
registry:
  auto_register: true  # Automatically register models after training
  staging_threshold:
    rmse: 100  # Promote to staging if RMSE < threshold
    r2: 0.5    # and R2 > threshold
